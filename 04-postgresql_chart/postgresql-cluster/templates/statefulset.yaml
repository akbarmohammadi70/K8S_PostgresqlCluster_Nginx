apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgresql-cluster.fullname" . }}
  labels:
    {{- include "postgresql-cluster.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "postgresql-cluster.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postgresql-cluster.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgresql-cluster.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.targetPort }}
          name: {{ .Values.service.name }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "postgresql-cluster.fullname" . }}
              key: postgresql-username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "postgresql-cluster.fullname" . }}
              key: postgresql-password
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.database }}
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      {{- if .Values.persistence.storageClass }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
